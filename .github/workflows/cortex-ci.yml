name: CortexCI

on:
  repository_dispatch:
    types: [cortex-ci]

env:
  UNITY_EMAIL: ${{ secrets.CORTEX_UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.CORTEX_UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.CORTEX_UNITY_SERIAL }}

  APPLE_CONNECT_EMAIL: ${{ secrets.CORTEX_APPLE_CONNECT_EMAIL }}
  APPLE_DEVELOPER_EMAIL: ${{ secrets.CORTEX_APPLE_DEVELOPER_EMAIL }}
  APPLE_DEVELOPER_TEAM_ID: ${{ secrets.CORTEX_APPLE_DEVELOPER_TEAM_ID }}
  APPLE_CONNECT_TEAM_ID: ${{ secrets.CORTEX_APPLE_CONNECT_TEAM_ID }}

  APPSTORE_ISSUER_ID: ${{ secrets.CORTEX_APPSTORE_ISSUER_ID }}
  APPSTORE_P8: ${{ secrets.CORTEX_APPSTORE_P8 }}
  APPSTORE_KEY_ID: ${{ secrets.CORTEX_APPSTORE_KEY_ID }}

  MATCH_URL: ${{ secrets.CORTEX_CERTIFICATES_REPO_URL }}
  MATCH_PASSWORD: ${{ secrets.CORTEX_CERTIFICATES_PASSWORD }}
  MATCH_PAT: ${{ secrets.CORTEX_CERTIFICATES_PAT }}
  MATCH_PAT_EMAIL: ${{ secrets.CORTEX_CERTIFICATES_PAT_EMAIL }}

  GOOGLE_PLAY_SERVICE_ACCOUNT: ${{ secrets.CORTEX_GOOGLE_PLAY_SERVICE_ACCOUNT }}

  ANDROID_KEYSTORE_NAME: ${{ secrets.CORTEX_ANDROID_KEYSTORE_NAME }}
  ANDROID_KEYSTORE_BASE64: ${{ secrets.CORTEX_ANDROID_KEYSTORE_BASE64 }}
  ANDROID_KEYSTORE_PASS: ${{ secrets.CORTEX_ANDROID_KEYSTORE_PASS }}
  ANDROID_KEYALIAS_NAME: ${{ secrets.CORTEX_ANDROID_KEYALIAS_NAME }}
  ANDROID_KEYALIAS_PASS: ${{ secrets.CORTEX_ANDROID_KEYALIAS_PASS }}
  ANDROID_UPLOAD_PLAYSTORE: ${{ github.event.client_payload.build.uploadPlayStore }}

  APP_IDENTIFIER: ${{ github.event.client_payload.build.appIdentifier }}

  GAME_ID: ${{ github.event.client_payload.game.id }}
  GAME_BUILD_ID: ${{ github.event.client_payload.game.buildId }}
  GAME_NAME: ${{ github.event.client_payload.game.name }}
  GAME_VERSION: ${{ github.event.client_payload.game.version }}
  GAME_BUILD_NUMBER: ${{ github.event.client_payload.game.buildNumber }}
  GAME_BUILD_MODE: ${{ github.event.client_payload.build.buildMode }}
  ENVIRONMENT: ${{ github.event.client_payload.build.environment }}
  CI_VERSION: ${{ github.event.client_payload.ciVersion }}
  XCODE_VERSION: "15.3"

jobs:
  unityBuild:
    name: unity
    runs-on: ubuntu-22.04
    steps:
      # Checkout
      - name: CheckoutRepository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.build.ref }}
          token: ${{ secrets.CORTEX_COMPANY_GITHUB_TOKEN }}
          submodules: true
          fetch-depth: 0
          lfs: true

      - name: CheckoutCortexCICore
        uses: actions/checkout@v4
        with:
          repository: gameflexteam/cortex-ci-core
          ref: ${{ env.CI_VERSION }}
          token: ${{ secrets.CORTEX_CI_CORE_TOKEN }}
          path: ./.github/cortex

      - name: BuildUnity
        uses: ./.github/cortex/actions/build-unity
        with:
          targetPlatform: ${{ github.event.client_payload.build.targetPlatform }}
          diawiToken: ${{ secrets.CORTEX_DIAWI_TOKEN }}
          storageCredentials: ${{ secrets.CORTEX_GCP_CREDENTIALS }}
          cortexApiSecret: ${{ github.event.client_payload.cortexApiSecret }}

  xcodeBuild:
    name: xcode
    runs-on: macos-13
    needs: unityBuild
    if: ${{ github.event.client_payload.build.targetPlatform == 'iOS' }}
    steps:
      - name: CheckoutCortexCICore
        uses: actions/checkout@v4
        with:
          repository: gameflexteam/cortex-ci-core
          ref: ${{ env.CI_VERSION }}
          token: ${{ secrets.CORTEX_CI_CORE_TOKEN }}
          path: ./.github/cortex

      - name: BuildXcode
        uses: ./.github/cortex/actions/build-xcode
        with:
          diawiToken: ${{ secrets.CORTEX_DIAWI_TOKEN }}
          cortexApiSecret: ${{ github.event.client_payload.cortexApiSecret }}
